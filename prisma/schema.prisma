generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model owner {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String   @unique
  password   String
  avatar     String?
  about      String
  occupation String
  birthDate  DateTime
  cvLinkPT   String?
  cvLinkEN   String?
}

model project {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  techs        String[]
  screenshots  String[]
  deployment   String
  backend      String
  frontend     String
  previewImage String
  activate     Boolean   @default(true)
  lastUpdate   DateTime?
  ownerId      String
}

model skill {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  image    String
  stack    String
  type     String
  subSkils String[]
  ownerId  String
}

model formation {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  institution      String
  image            String
  workload         Int
  initialDate      DateTime
  endDate          DateTime
  description      String
  type             String
  certificationUrl String?
  ownerId          String
}

model service {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  sId             String       @unique
  title           String
  description     String
  icon            String
  technologies    String[]
  category        String
  complexity      String
  deliveryTime    String
  priceMin        Int
  priceMax        Int
  currency        String
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  connectionsFrom connection[] @relation("ServiceFrom")
  connectionsTo   connection[] @relation("ServiceTo")
}

model connection {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  fromId      String  @db.ObjectId
  toId        String  @db.ObjectId
  type        String
  serviceFrom service @relation("ServiceFrom", fields: [fromId], references: [id])
  serviceTo   service @relation("ServiceTo", fields: [toId], references: [id])
}
